install.packages("devtools")
find_rtools()
library(devtools)
library(devtools)
find.package(devtools)
find.package("devtools")
install.packages("devtools")
install.packages("devtools")
library(devtools)
find_rtools()
install.packages("KernSmooth")
library(KernSmooth)
install.packages("swirl")
library(swirl)
swirl()
5+7
exit()
bye()
set.seed(1)
rpois(5,2)
set.seed(10)
x <- rep(0:1, each = 5)
e <- rnorm(10, 0, 20)
y <- 0.5 + 2 * x + e
y
x
rep(0:1)
rep(0:1, each=5)
library(datasets)
Rprof()
fit <- lm(y ~ x1 + x2)
Rprof(NULL)
m <- matrix(nrow=0,mcol=0);
m <- matrix(nrow=0,ncol=0);
m
length(m)
clc
library(swirl)
swirl()
x <- 5+7
x
y <- x-3
y
z <- c(1.1,9,3.14)
?c
z
c(z,555,z)
z*2+100
my_sqrt<-sqrt(z-1)
my_sqrt
my_div <-z/my_sqrt
my_div
c(1,2,3,4)+c(0,10)
c(1,2,3,4)+c(0,10,100)
z*2+1000
my_div
getwd()
ls()
x <- 9
ls()
list.files()
?list.files
args(list.files)
old.dir <- getwd()
dir.create(testdir)
dir.create("testdir")
setwd(testdir)
setwd("testdir")
file.create("mytest.R")
ls()
list.files()
file.exists("mytest.R")
file.info("mytest.R")
file.rename("mytest.R","mytest2.R")
file.copy("mytest2.R","mytest3.R")
file.path("mytest3.R")
dir.create("testdir2")
setwd("testdir2")
dir.create("testdir3")
dir.create("testdir2/testdir3", recursive = TRUE)
?dr.delete
?dir.delete
?delete
unlink("testdir2")
unlink("testdir2", recursive = TRUE)
setwd(old.dir)
unlink("testdir", recursive = TRUE)
1:20
pi:10
15:1
?`:`
seq(1,20)
seq(0,10,by=0.5)
my_seq<-seq(5,10,length=30)
length(my_seq)
1:length(my_seq)
seq(along.with = my_seq)
seq_along(my_seq)
rep(0,times = 40)
rep(c(0,1,2),times=10)
rep(c(0,1,2),each=10)
c(0.5,55,-10,6)
num_vect <- c(0.5,55,-10,6)
tf <- num_vect < 1
tf
num_vect >=6
my_char <- c("my","name","is")
my_char <- c("My","name","is")
my_char
paste(my_char,collapse=" ")
my_name <- c(my_char,"Kokako")
my_name
paste(my_name,collapse=" ")
paste("Hello","world!",sep=" ")
paste(1:3.c("X","Y","Z"))
paste(1:3.c("X","Y","Z"),sep="")
paste(1:3,c("X","Y","Z"),sep="")
paste(LETTERS, 1:4, sep = "-")
x <- c(44,NA,5,NA)
x*3
y <- rnorm(1000)
z <- rep(NA, 1000)
my_data <-sample(c(y,z),100)
my_na <- is.na(my_data)
my_na
my_data == NA
sum(my_na)
my_data
0/0
Inf-Inf
swirl()
?qunif
punif(.75)
qunif(.75)
x <- 1:4
p <- x/sum(x)
temp <- rbind(x, p)
rownames(temp) <- c("X", "Prob")
temp
library(datasets)
tooth <- load(ToothGrowth)
?load
tooth <- data(ToothGrowth)
tooth
data(ToothGrowth)
data()
tooth <- data(ToothGrowth)
class(tooth)
tooth <- data("ToothGrowth")
ToothGrowth
tooth <- ToothGrowth
str(ToothGrowth)
summary(tooth)
require(graphics)
coplot(len ~ dose | supp, data = ToothGrowth, panel = panel.smooth,
xlab = "ToothGrowth data: length vs dose, given type of supplement")
help(ToothGrowth)
?xtabs
xtabs(mean(len) ~ supp + dose, tooth)
xtabs(mean(len) ~ supp + dose, data = tooth)
xtabs(len ~ supp + dose, data = tooth)
library(plyr)
ddply(tooth, .(supp, dose), summarize, mean(len))
xtabs(len ~ supp + dose, aggregate(len ~ supp + dose, tooth, mean))
boxplot(len~supp*dose, data=ToothGrowth, col=(c("gold","darkgreen")), main="Tooth Growth", xlab="Supplement and Dose")
ToothGrowthVC <- ToothGrowth[ToothGrowth$supp = "VC",]
ToothGrowthVC <- ToothGrowth[ToothGrowth$supp == "VC",]
ToothGrowthVC
?std
?sd
t.test(len ~ supp, paired = FALSE, var.equal = TRUE, data = ToothGrowth)
t.test(len ~ supp, paired = FALSE, var.equal = FALSE, data = ToothGrowth)
t.test(len ~ supp, paired = TRUE, var.equal = TRUE, data = ToothGrowth)
t.test(len ~ supp, paired = FALSE, var.equal = TRUE, data = ToothGrowth)
qt(0.95, 58)
qt(0.975, 58)
qnorm(0.95, 58)
qnorm(0.95)
qt(0.95,60)
?layout
?subset
ToothGrowthV12 <- subset(ToothGrowth, dose == 0.5 | dose == 1)
t.test(len ~ dose, paired = FALSE, var.equal = TRUE, data = ToothGrowth12)
ToothGrowth12 <- subset(ToothGrowth, dose == 0.5 | dose == 1)
t.test(len ~ dose, paired = FALSE, var.equal = TRUE, data = ToothGrowth12)
xtabs(len ~ supp + dose, aggregate(len ~ supp + dose, ToothGrowth, sd))
xtabs(len ~ supp, aggregate(len ~ supp + dose, ToothGrowth, sd))
xtabs(len ~ dose, aggregate(len ~ supp + dose, ToothGrowth, sd))
t.test(len ~ supp, paired = FALSE, var.equal = FALSE, data = ToothGrowth)
t.test(len ~ dose, paired = FALSE, var.equal = FALSE, data = ToothGrowth23)
ToothGrowth23 <- subset(ToothGrowth, dose == 1 | dose == 2)
t.test(len ~ dose, paired = FALSE, var.equal = FALSE, data = ToothGrowth23
)
?t
library(dplyr)
library(dplyr)
?bind_rows
power.t.test(n = 100, delta = 0.01, sd = 0.04, type = "one.sample", alt = "one.sided")$power
power.t.test(power = 0.90, delta = 0.01, sd = 0.04, type = "one.sample", alt = "one.sided")$n
?t.test
1    140	132
2	138	135
3	150	151
4	148	146
5	135	130
pbinom(2, size = 4, prob = 0.5, lower.tail = FALSE)
sub <- c(1:5)
base <- c(140,138,150,148,135)
w2 <- c(132,135,151,146,130)
?table
test <- cbind(sub,base,w2)
test
?t.test
t.test(test)
t.test(test, paired = TRUE)
t.test(base, w2, paired = TRUE)
1100 + c(-1,1)*qt(0.975,8)*(30/3)
1100 + c(-1,1)*qt(0.025,8)*(30/3)
rate <- (1/100)*1787
ppois(9,rate,lower.tail=FALSE)
ppois(10,rate,lower.tail=TRUE)
ppois(9,rate,lower.tail=TRUE)
10/1787
n <- 9
bmi <- -3
bmip <- 1
sdbmi <- 1.5
sdbmip <- 1.8
t <- (bmi - bmip)/sqrt((sdbmi)^2/n + (sdbmip)^2/n)
pt(t,n,lower.tail=FALSE)
pt(t,n,lower.tail=TRUE)
x <- c(0.18, -1.54, 0.42, 0.95)
x <- c(0.18, -1.54, 0.42, 0.95)
w <- c(2, 1, 3, 1)
weighted.mean(x,w)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
?lm
lm(y ~ x -1)
data(mtcars)
lm(mpg ~ weight, mtcars)
mtcars
lm(mpg ~ wt, mtcars)
x <- c(8.58, 10.46, 9.01, 9.64, 8.86)
mn <- mean(x)
sd <- sd(x)
(x-mn)/sd
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
lm(y ~ x)
mean(x)
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
library(datasets)
data(airquality)
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
install.packages("ggplot2")
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
library(ggplot2)
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
?text
?llines
?lines
?axis
?dev.copy
x <- c(0.61, 0.93, 0.83, 0.35, 0.54, 0.16, 0.91, 0.62, 0.62)
y <- c(0.67, 0.84, 0.6, 0.18, 0.85, 0.47, 1.1, 0.65, 0.36)
fit <- lm(y~x)
summary(fit)$coefficients
summary(fit)$sigma
data(mtcars)
wmpg <- lm(mpg ~ wgt, mtcars)
head(mtcars)
wmpg <- lm(mpg ~ wt, mtcars)
coeff <- summary(wmgp)$coefficients
coeff <- summary(wmpg)$coefficients
coeff[2,1]+c(-1,1)*qt(.975,df=wmpg$df)*coeff[2,2]
?help
?mtcars
predict(wmpg,3,interval=("prediction"))
predict(wmpg,3,interval=("prediction"))
predict(wmpg,data.frame(wt = 3),interval=("prediction"))
predict(wmpg,data.frame(wt = 2),interval=("confidence"))
predict(wmpg,data.frame(wt = 2),interval=("prediction"))
wmpg2 <- lm(mpg ~ wt -1, mtcars)
sum(resid(wmpg)^2)/sum(resid(wmpg2)^2)
yhat <- predict(wmpg)
yhat2 <- predict(wmpg2)
sum((mpg-yhat)^2)/sum((mpg-yhat2)^2)
sum((mtcars$mpg-yhat)^2)/sum((mtcars$mpg-yhat2)^2)
sum((mtcars$mpg-yhat2)^2)/sum((mtcars$mpg-yhat)^2)
wmpg2 <- lm(mpg ~ 1+offset(wt), mtcars)
sum((mtcars$mpg-yhat)^2)/sum((mtcars$mpg-yhat2)^2)
yhat2 <- predict(wmpg2)
sum((mtcars$mpg-yhat)^2)/sum((mtcars$mpg-yhat2)^2)
wmpg3 <- lm(mpg ~ wt/2, mtcars)
wmpg3 <- lm(mpg ~ (wt/2), mtcars)
wst <- mtcars$wt/2
wmpg3 <- lm(mpg ~ wsg, mtcars)
wmpg3 <- lm(mpg ~ wst, mtcars)
summary(wmpg3)$coefficients
?predict
predict(wmpg,data.frame(wt = 2),interval=("confidence"))
wmpg2 <- lm(mpg ~ 1, data = mtcars)
r1 <- summary(wmpg)$sigma
r2 <- summary(wmpg2)$sigma
r1/r2
?predict.lm
predict.lm(wmpg,data.frame(wt/2),interval=("confidence"))
predict.lm(wmpg,data.frame(wt = wt/2),interval=("confidence"))
predict.lm(wmpg,data.frame(wt = mtcars$wt/2),interval=("confidence"))
coeff3 <- summary(wmpg3)$coefficients
coeff3[2,1]+c(-1,1)*qt(.975,df=wmpg3$df)*coeff[2,2]
summary(wmpg)
coeff <- summary(wmpg)$coefficients
coeff[2,1]*2+c(-1,1)*qt(.975,df=wmpg$df)*coeff[2,2]
coeff3[2,1]+c(-1,1)*qt(.975,df=wmpg3$df)*coeff3[2,2]
predict.lm(wmpg,data.frame(wt = mean(mtcars$wt)),interval=("confidence"))
fit <- lm(mpg ~ 1, data = mtcars)
summary(fit)
summary(wmpg)
?deviance
r1 <- (summary(wmpg)$sigma)^2
r2 <- (summary(fit)$sigma)^2
r1/r2
data <- read.csv("activity.csv")
setwd("~/Coursera-DS/ReproducibleResearch/Assignment1/RepData_PeerAssessment1")
data <- read.csv("activity.csv")
dates <- as.POSIXct(data$date, format="%Y-%m-%d")
firstday <- dates[[1]]
lastday <- dates[[17568]]
datetime <- seq.POSIXt(from = firstday, to = lastday+(24*60*60), by = "5 min")
datetime <- head(datetime,-1)
data <- cbind(datetime, data)
head(data)
data <- data[,1:2]
head(data)
byday <- aggregate(steps ~ datetime, data, sum)
mean(byday$steps)
median(byday$steps)
